FROM node:22-alpine AS base

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

WORKDIR /app

COPY ./apps/web/package.json ./apps/web/package.json
COPY ./apps/web/pnpm-lock.yaml ./apps/web/pnpm-lock.yaml

COPY ./packages/common/package.json ./packages/common/package.json
COPY ./packages/common/pnpm-lock.yaml ./packages/common/pnpm-lock.yaml

FROM base AS prod-deps

WORKDIR /app/apps/web
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --prod --frozen-lockfile

WORKDIR /app/packages/common
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --prod --frozen-lockfile

FROM base AS build

WORKDIR /app
COPY . .

WORKDIR /app/packages/common
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile
RUN pnpm build


WORKDIR /app/apps/web
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile
RUN pnpm build

FROM base AS runtime

WORKDIR /app

COPY --from=prod-deps /app/apps/web/node_modules ./node_modules
# copy the built common library into node_modules
RUN rm -r ./node_modules/common
COPY --from=build /app/packages/common ./node_modules/common
COPY --from=build /app/apps/web/dist ./dist
COPY --from=base /app/apps/web/package.json ./package.json

ENV NODE_ENV=production
ENV PORT=4200

EXPOSE 4200

CMD ["pnpm", "serve:ssr:web"]
